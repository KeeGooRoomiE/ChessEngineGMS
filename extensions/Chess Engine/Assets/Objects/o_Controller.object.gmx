<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-999999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>    ///Setup
    global.Check="";//Colour that is in check.
    global.Selected=-1;//This variable represents what piece on the board is currently selected by the player.
    global.Turn="White";//Sets the colour that starts first.
    
     WhiteKing=0 BlackKing=0  White=0  Black = 0;//Setup variables for step event.
     
    Win_Text="";//If the winning text is anything other than "", it will be shown to the player.
    var P=0, X=x, Y=y;//Setup temp variables.
    while P &lt;=63{//For every segment we want on the board.
        Obj=instance_create(X,Y,o_Segment);//Create a segment on the board.
        Obj.ID=P;//Set the ID for the segment.
        if Obj.ID&gt;=8 and Obj.ID&lt;=15{Obj.Piece_ID=0};//Black Pawns
        if Obj.ID=0 or Obj.ID=7{Obj.Piece_ID=1};//Black Rooks
        if Obj.ID=1 or Obj.ID=6{Obj.Piece_ID=2};//Black Knight
        if Obj.ID=2 or Obj.ID=5{Obj.Piece_ID=3};//Black Bishop
        if Obj.ID=3 {Obj.Piece_ID=4};//Black Queen
        if Obj.ID=4 {Obj.Piece_ID=5};//Black King
        
        if Obj.ID=61 or Obj.ID=58{Obj.Piece_ID=3  Obj.Colour="White"};//White Bishop
        if Obj.ID=63 or Obj.ID=56{Obj.Piece_ID=1 Obj.Colour="White"};//White Rooks
        if Obj.ID&lt;=55 and Obj.ID&gt;=48{Obj.Piece_ID=0 Obj.Colour="White"};//White Pawns
        if Obj.ID=62 or Obj.ID=57{Obj.Piece_ID=2 Obj.Colour="White"};//White Knight
        if Obj.ID=59 {Obj.Piece_ID=4 Obj.Colour="White"};//White Queen
        if Obj.ID=60 {Obj.Piece_ID=5 Obj.Colour="White"};//White King
        
        X+=129;//Add X to the x co-ord of the next segment.
        if X &gt;=1110{X=x Y+=129};//If we're at the edge of the board, Add Y to the y co-ord of the next segment. and reset the X co-ord.
        P+=1;//Move on to the next piece.
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>    ///Win Conditions
    WhiteKing=0 BlackKing=0 White=0 Black = 0;//Setup variables.
    with o_Segment{if Colour="White" and Piece_ID!=-1 {other.White+=1} if Colour="Black" and Piece_ID!=-1{other.Black+=1}};//Check to see if players have all their pieces
    with o_Segment{if Colour="White" and Piece_ID=5 {other.WhiteKing+=1} if Colour="Black" and Piece_ID=5 {other.BlackKing+=1}};//Check to see if players have their king.
    if White=0{Win_Text="Blacks Win!"}if Black=0{Win_Text="Whites Win!"};//Set winner if players dont have any pieces
    if WhiteKing=0{Win_Text="Blacks Win!"}if BlackKing=0{Win_Text="Whites Win!"};//Set Winder if player loses their king.

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>    ///Reset Game
    if Win_Text!=""{room_restart()};//Restart Game after displaying winning text.
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>    ///Draw text
    draw_set_font(Fnt_Main);//Set Main Font
    draw_set_halign(fa_center);//Set text alignment to centre

    //Check to see if player who's turn it is, is in check and if so alert that player.
    if global.Check=global.Turn{
        draw_text_colour(room_width/2,5,"Turn: "+global.Turn+", Your in check! you must move your king or move a piece to protect it!",c_white,c_white,c_white,c_white,1)};
    {draw_text_colour(room_width/2,5,"Turn: "+global.Turn,c_white,c_white,c_white,c_white,1)}

    //Draw winning text when a player wins the game.

    //Displaying winning by taking king.
    if Win_Text="Whites Win!"{draw_sprite(Spr_Info,0,room_width/2-134,room_height/2) draw_text_colour(room_width/2,room_height/2,string(Win_Text)+"# Click/Tap# to restart!",c_white,c_white,c_white,c_white,1)};
    if Win_Text="Blacks Win!"{draw_sprite(Spr_Info,0,room_width/2-134,room_height/2) draw_text_colour(room_width/2,room_height/2,string(Win_Text)+"# Click/Tap# to restart!",c_black,c_black,c_black,c_black,1)};

    //Displaying winning by check.
    if Win_Text="Check! Whites Win!"{draw_sprite(Spr_Info,0,room_width/2-134,room_height/2) draw_text_colour(room_width/2,room_height/2,string(Win_Text)+"# Click/Tap# to restart!",c_white,c_white,c_white,c_white,1)};
    if Win_Text="Check! Blacks Win!"{draw_sprite(Spr_Info,0,room_width/2-134,room_height/2) draw_text_colour(room_width/2,room_height/2,string(Win_Text)+"# Click/Tap# to restart!",c_black,c_black,c_black,c_black,1)};
    //Reset
    draw_set_halign(fa_left);//Set text alignment to left

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
